apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'de.felixschulze.gradle.hockeyapp'

ext {
	support_version           = "28.0.0"
	constraint_layout_version = "2.0.0-alpha2"
	koin_version              = "1.0.1"
	moxy_version              = "1.5.5"
	cicerone_version          = "3.0.0"
	circle_indicator_version  = "1.2.2"
	hockey_version            = "5.1.1"
	firebase_version          = "16.0.4"
	glide_version			  = "4.8.0"
	simple_rating_bar_version = "1.4.2"
	slf4j_timber_version      = "1.0.1"
	facebook_version          = "4.38.0"
}

android {
	compileSdkVersion Integer.parseInt(project.ANDROID_BUILD_SDK_VERSION)
	buildToolsVersion project.ANDROID_BUILD_TOOLS_VERSION
	
	defaultConfig {
		applicationId "com.kg.gettransfer"
		minSdkVersion project.ANDROID_BUILD_MIN_SDK_VERSION
		targetSdkVersion project.ANDROID_BUILD_SDK_VERSION
		testInstrumentationRunner project.ANDROID_TEST_INSTRUMENTATION_RUNNER
		vectorDrawables.useSupportLibrary = true
		multiDexEnabled true
	}

	signingConfigs {
		config {
            storeFile file(RELEASE_STORE_FILE)
            storePassword RELEASE_STORE_PASSWORD
            keyAlias RELEASE_KEY_ALIAS
            keyPassword RELEASE_KEY_PASSWORD
		}
	}
	
	android {
		lintOptions {
			abortOnError false
		}
	}
	
	buildTypes {
		release {
			shrinkResources false
			minifyEnabled false
			useProguard true
			debuggable true
			proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
			signingConfig signingConfigs.config
		}
		debug {
			minifyEnabled false
			debuggable true
			shrinkResources false
		}
	}

	flavorDimensions "type"

	productFlavors {
		dev {
			signingConfig signingConfigs.config

			versionCode getBuildNumber() as Integer
			versionName "2.0"

			manifestPlaceholders = [
					hockeyAppId   : "1f061f58b7bd42c387ecd8681d30df48",
			]

			dimension "type"
		}

		prod {
			signingConfig signingConfigs.config

			versionCode getBuildNumber() as Integer
			versionName "1.0"

			manifestPlaceholders = [
					hockeyAppId   : "1f061f58b7bd42c387ecd8681d30df48",
			]

			dimension "type"
		}
	}
	
	sourceSets {
		main.java.srcDirs += 'src/main/kotlin'
	}
	
	compileOptions {
		sourceCompatibility JavaVersion.VERSION_1_8
		targetCompatibility JavaVersion.VERSION_1_8
	}
}

androidExtensions {
	experimental = true
}

hockeyapp {
	apiToken = "7381bebd314d4f69b363cd29d4ce6b41" //api token with owner rights
	restoreAllowed = true // Enables restoring function for previous versions
	notes = generateChangeLog() // Generates default notes - feel free to change this
	buildServerUrl = System.getenv("JOB_URL") ?: "Unknown"
	repositoryUrl = System.getenv("GIT_URL") ?: "Unknown"
}

dependencies {
	implementation project(":domain")
	implementation project(":data")
	implementation project(":geo")
	implementation project(":prefs")
	implementation project(':logging')
	implementation project(":remote")
	implementation libs.kotlin
	implementation libs.coroutines
	implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"
	implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support:design:$support_version"
    implementation "com.android.support.constraint:constraint-layout:$constraint_layout_version"
    implementation "com.android.support:recyclerview-v7:$support_version"
    // Maps
    implementation libs.psLocation
    implementation libs.psPlaces
    implementation "com.google.android.gms:play-services-maps:$gms_version"
	implementation 'com.google.maps.android:android-maps-utils:0.5'
    /*
    implementation "com.google.android.gms:play-services-places:$gms_version"
    implementation "com.google.android.gms:play-services-drive:$gms_version"
    implementation 'com.google.maps.android:android-maps-utils:0.5'
    implementation 'com.google.maps:google-maps-services:0.2.9'
    */
    // Moxy
	implementation "com.arello-mobile:moxy:$moxy_version"
	implementation "com.arello-mobile:moxy-app-compat:$moxy_version"
	kapt "com.arello-mobile:moxy-compiler:$moxy_version"
	// Cicerone
	implementation "ru.terrakok.cicerone:cicerone:$cicerone_version"
    
	// WTF? 
	implementation "me.relex:circleindicator:$circle_indicator_version@aar"
    // Koin
    // Достался по наследству от предыдущего бедолаги. В будущем перейти на Dagger
    implementation "org.koin:koin-android:$koin_version"
    
    // Logger
    implementation libs.timber
    implementation "at.favre.lib:slf4j-timber:$slf4j_timber_version"

	// Hockey
	implementation "net.hockeyapp.android:HockeySDK:$hockey_version"

	//Firebase
	implementation "com.google.firebase:firebase-core:$firebase_version"

	//Glide
	implementation "com.github.bumptech.glide:glide:$glide_version"
	kapt "com.github.bumptech.glide:compiler:$glide_version"

	//RatingBar with vector images
	implementation "com.github.ome450901:SimpleRatingBar:$simple_rating_bar_version"
	
	//Facebook
//	implementation "com.facebook.android:facebook-android-sdk:$facebook_version"
    
	testImplementation libs.junit
	testImplementation libs.hamcrest
	testImplementation libs.mockito
}

def getBuildNumber() {
	return System.getenv("BUILD_NUMBER") ?: "1"
}

def generateChangeLog() {
	def changelog = "  \nbranch: " + System.getenv("GIT_BRANCH") ?: "Unknown"
	changelog += "  \ncommit: " + System.getenv("GIT_COMMIT") ?: "Unknown"
	changelog += "  \n\njob name: " + System.getenv("JOB_NAME") ?: "Unknown"
	changelog += "  \nstarted by: " + System.getenv("BUILD_USER") ?: "Unknown"
	changelog += "  \nbuild number: " + System.getenv("BUILD_NUMBER") ?: "Unknown"
	println changelog
	return changelog
}

apply plugin: 'com.google.gms.google-services'
