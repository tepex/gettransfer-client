buildscript {
    repositories {
        google()
        jcenter()
        mavenCentral()
    }

    ext {
        kotlin_version        = "1.3.31"
        coroutines_version    = "1.1.1"
        serialization_version = "0.9.1"
        //gradle_version        = "3.4.0-alpha07"
        gradle_version        = '3.4.0'
        koin_version          = "2.0.1"
        gms_version           = "16.0.0"
        gs_version            = "4.2.0"
        hockeyapp_version     = "3.7.6"
        jsr250_version        = "1.0"
        timber_version        = "4.7.1"
        slf4j_version         = "1.7.25"
        junit_version         = "4.12"
        hamcrest_version      = "2.0.0.0"
        mockito_version       = "2.23.4"
        gson_version          = "2.8.5"
        room_version          = "1.1.1"
        dexcount_version      = "0.8.4"
        detekt_version        = "1.0.0-RC15"

        libs = [
            kotlin        : ("org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"),
            coroutines    : ("org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"),
            serialization : ("org.jetbrains.kotlinx:kotlinx-serialization-runtime:$serialization_version"),
            koin_core     : ("org.koin:koin-core:$koin_version"),
            koin_core_ext : ("org.koin:koin-core-ext:$koin_version"),
            koin_android  : ("org.koin:koin-android:$koin_version"),
            psLocation    : ("com.google.android.gms:play-services-location:$gms_version"),
            psPlaces      : ("com.google.android.gms:play-services-places:$gms_version"),
            gson          : ("com.google.code.gson:gson:$gson_version"),
            timber        : ("com.jakewharton.timber:timber:$timber_version"),
            slf4j         : ("org.slf4j:slf4j-api:$slf4j_version"),
            jsr250        : ("javax.annotation:jsr250-api:$jsr250_version"),
            room          : ("android.arch.persistence.room:runtime:$room_version"),
            kapt_room     : ("android.arch.persistence.room:compiler:$room_version"),
            junit         : ("junit:junit:$junit_version"),
            hamcrest      : ("org.hamcrest:java-hamcrest:$hamcrest_version"),
            mockito       : ("org.mockito:mockito-core:$mockito_version")
        ]
    }

    dependencies {
        classpath "com.android.tools.build:gradle:$gradle_version"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath "com.github.3mph4515:gradle-hockeyapp-plugin:$hockeyapp_version"
        classpath "com.google.gms:google-services:$gs_version"
        classpath "com.getkeepsafe.dexcount:dexcount-gradle-plugin:$dexcount_version"
    }
}

plugins {
    /* Годный плагин для Gradle. Проверяет наличие последних версий зависимостей.
    https://github.com/ben-manes/gradle-versions-plugin
    $./gradlew dependencyUpdates
    */
    id 'com.github.ben-manes.versions' version '0.20.0'
    id 'com.gladed.androidgitversion'  version '0.4.5'
    /* code analysis tool  */
    id 'io.gitlab.arturbosch.detekt' version '1.0.0-RC15'
}

allprojects {
    repositories {
        google()
        jcenter()
        maven { url "https://jitpack.io" }
        maven { url "https://kotlin.bintray.com/kotlinx" }
        maven { url "https://google.bintray.com/flexbox-layout" }
    }
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
        }
        tasks.withType(Test) {
            testLogging.events = ["failed", "passed", "skipped"]
            testLogging.showStandardStreams = true
        }
    }
}

dependencies {
    detektPlugins "io.gitlab.arturbosch.detekt:detekt-formatting:1.0.0-RC15"
}

detekt {
    toolVersion = "1.0.0-RC15"
    filters = ".*build.*,.*/resources/.*,.*/tmp/.*"
    input = files(
        "cache/src",
        "data/src",
        "domain/src",
        "encrypt/src",
        "geo/src",
        "logging/src",
        "prefs/src",
//        "presentation/src",
        "remote/src",

//        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/presenter/BasePresenter.kt",
//        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/presenter/MainPresenter.kt",
// presentation/src/main/kotlin/com/kg/gettransfer/presentation/presenter/RatingDetailPresenter.kt
// presentation/src/main/kotlin/com/kg/gettransfer/presentation/presenter/RatingLastTripPresenter.kt
// presentation/src/main/kotlin/com/kg/gettransfer/presentation/presenter/SettingsPresenter.kt
// presentation/src/main/kotlin/com/kg/gettransfer/presentation/presenter/ThanksForRatePresenter.kt
// presentation/src/main/kotlin/com/kg/gettransfer/presentation/presenter/TransferDetailsPresenter.kt

//        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/presenter/CreateOrderPresenter.kt",

        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/delegate/OfferItemBindDelegate.kt",

        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/mapper/VehicleMapper.kt",

        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/model/VehicleModel.kt",

        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/presenter/PaymentOfferPresenter.kt",
        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/presenter/PaymentPresenter.kt",
        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/presenter/PaypalConnectionPresenter.kt",
        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/presenter/SelectCurrencyPresenter.kt",
        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/presenter/SupportPresenter.kt",

        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/ui/BaseActivity.kt",
        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/ui/BaseGoogleMapActivity.kt",
        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/ui/CarrierTripsMainActivity.kt",
        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/ui/CreateOrderActivity.kt",
        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/ui/MainActivity.kt",
        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/ui/BottomSheetDialog.kt",
        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/ui/MainRequestFragment.kt",
        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/ui/ProfileSettingsActivity.kt",
        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/ui/RatingLastTripFragment.kt",
        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/ui/SelectCurrencyFragment.kt",
        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/ui/SettingsActivity.kt",
        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/ui/SignUpCarrierFragment.kt",
        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/ui/SignUpFragment.kt",
        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/ui/SupportActivity.kt",
        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/ui/TransferDetailsActivity.kt",

        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/ui/custom/CommunicationButton.kt",
        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/ui/custom/RateField.kt",
        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/ui/custom/RatingFieldView.kt",
        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/ui/custom/TransferDetailsField.kt",
        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/ui/custom/TransferDetailsCarrierInfoField.kt",
        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/ui/dialogs/RatingDetailDialogFragment.kt",



        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/view/MainView.kt",
        "presentation/src/main/kotlin/com/kg/gettransfer/presentation/view/SupportView.kt",

        "presentation/src/main/kotlin/com/kg/gettransfer/utilities/Analytics.kt"

    )
    config = files("detekt-config.yml")
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

task incrementVersionCode {
    doLast {
        def versionName = androidGitVersion.name()
        def splitted = versionName.split("\\-")[0].split("\\.")
        ++splitted[2]
        def newTag = splitted.join(".")
        println 'new version: '+newTag
        def p1 = "git tag ${newTag}".execute()
        p1.waitFor()
        println p1.text.trim()
    }
}
