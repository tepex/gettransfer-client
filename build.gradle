buildscript {
	repositories {
		google()
		jcenter()
	}

	ext {
		kotlin_version        = '1.2.51'
		gradle_version        = '3.3.0-alpha03'
		realm_version         =  '5.4.0'
		jsr250_version        = '1.0'
		timber_version        = '4.7.1'
		junit_version         = '4.12'
		hamcrest_version      = '2.0.0.0'
		mockito_version       = '2.19.1'
		
		libs = [
			timber     : ("com.jakewharton.timber:timber:${timber_version}"),
			jsr250     : ("javax.annotation:jsr250-api:${jsr250_version}"),
			junit      : ("junit:junit:${junit_version}"),
			hamcrest   : ("org.hamcrest:java-hamcrest:${hamcrest_version}"),
			mockito    : ("org.mockito:mockito-core:${mockito_version}")
		]
	}
    
	dependencies {
		classpath "com.android.tools.build:gradle:$gradle_version"
		classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
		classpath "io.realm:realm-gradle-plugin:$realm_version"
	}
}

plugins {
	/* Годный плагин для Gradle. Проверяет наличие последних версий зависимостей.
	https://github.com/ben-manes/gradle-versions-plugin
	$./gradlew dependencyUpdates
	*/
	id 'com.github.ben-manes.versions' version '0.20.0'
	id 'com.gladed.androidgitversion'  version '0.4.4'
}

allprojects {
	repositories {
		google()
		jcenter()
		maven { url "https://jitpack.io" }
	}
	gradle.projectsEvaluated {
		tasks.withType(JavaCompile) {
			options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
		}
		tasks.withType(Test) {
			testLogging.events = ["failed", "passed", "skipped"]
			testLogging.showStandardStreams = true
		}
	}
}

task clean(type: Delete) {
	delete rootProject.buildDir
}

task incrementVersionCode {
	doLast {
		def versionName = androidGitVersion.name()
		def splitted = versionName.split("\\-")[0].split("\\.")
		++splitted[2]
		def newTag = splitted.join(".")
		println 'new version: '+newTag
		def p1 = "git tag ${newTag}".execute()
		p1.waitFor()
		println p1.text.trim()
	}
}
